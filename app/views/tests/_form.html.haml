-# locals: (test:, courses:)

:ruby
  questions = test.new_record? ? '' : test.form_questions
  thresholds = test.new_record? ? '' : test.form_thresholds
  plan_data = courses.to_h { |c| [c.id, c.plan_date_data] }.to_json

= form_with model: test,
            html: { class: 'form',
                    id: 'test_form',
                    data: { controller: 'fields' } } do |f|
  = render 'shared/form_errors', resource: test

  .form-group
    = f.label :name
    = f.text_field :name

  .form-group
    = f.label :level
    = f.select :level, Test.levels.keys.map { |k| [short_level(k), k] }.uniq { |k, _v| k }

  .form-group
    = f.label :basics, t('.basics')
    = f.number_field :basics, min: 0

  .form-group
    = f.label :questions
    = f.text_area :questions, value: questions
    %small Each line is a section (named after a skill)
    %small Skills should be followed by a ':', then comma-separated list of maximum scores e.g.
    %small 'Writing: 2, 4, 5, 6'
    %small 'Reading: 5, 2, 2'

  .form-group
    = f.label :thresholds
    = f.text_area :thresholds, value: thresholds
    %small Each line is a level (all in words), followed by a ':', then the threshold e.g.
    %small 'Sky Two: 70'
    %small 'Sky Three: 85'


  %h3.font-bold.text-center.text-2xl Courses

  = f.fields_for :course_tests, test.course_tests do |cl_f|
    = render 'course_tests/fields',
             courses:,
             f: cl_f,
             plan_data:,
             test:

  %template{ 'data-fields-target' => 'template' }
    = f.fields_for :course_tests,
                   test.course_tests.new,
                   child_index: 'CHILD' do |cl_f|
      = render 'course_tests/fields',
               courses:,
               f: cl_f,
               plan_data:,
               test:

  %div{ 'data-fields-target' => 'target' }

  %button.btn.btn-secondary{ 'data-action' => 'fields#add' }
    Add Course

  = f.submit class: 'btn btn-main'
