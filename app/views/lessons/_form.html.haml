-# locals: (courses:, lesson:, resource_ids:)

= form_with model: lesson,
            html: { id: "#{lesson.type.underscore}_form",
                    class: 'form',
                    data: { controller: 'fields' } } do |f|
  -# need to evaluate it here so priority_fields are available for yield
  - type_fields = render("lessons/#{lesson.type.pluralize.underscore}/fields",
                         f:, lesson:)

  = render 'shared/form_errors', resource: lesson

  - if current_user.is?('Admin')
    %h3.font-bold.text-center Courses

    = f.fields_for :course_lessons, lesson.course_lessons do |cl_f|
      = render 'course_lessons/fields',
               collection: courses,
               f: cl_f,
               resource: lesson

    %template{ 'data-fields-target' => 'template' }
      = f.fields_for :course_lessons,
                     lesson.course_lessons.new,
                     child_index: 'CHILD' do |cl_f|
        = render 'course_lessons/fields',
                 collection: courses,
                 f: cl_f,
                 resource: lesson

    %div{ 'data-fields-target' => 'target' }

    %button.btn.btn-secondary.self-center{ 'data-action' => 'fields#add' }
      Add Course

  = yield :priority_fields

  .form-group
    = f.label :title
    = f.text_field :title, required: true

  .form-group
    = f.label :goal
    = f.text_area :goal

  - unless lesson.type == 'KindyPhonic'
    .form-group
      = f.label :level
      = f.select :level,
                 lesson.class.levels.to_h { |k, _v| [k.titleize, k] },
                 required: true,
                 prompt: 'Select a level'

  = type_fields

  .form-group
    = f.label :resources
    = f.file_field :resources, multiple: true
    - if resource_ids
      - resource_ids.each do |id|
        = f.hidden_field :resources,
                         multiple: true,
                         value: id

  = f.submit class: 'btn btn-primary'
